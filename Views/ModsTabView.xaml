<UserControl x:Class="KenshiModManager.Views.ModsTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:KenshiModManager.Views"
             xmlns:converters="clr-namespace:KenshiModManager.Converters"
             xmlns:properties="clr-namespace:KenshiModManager.Properties"
             Background="#1E1E1E">
  <FrameworkElement.Resources>
    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converters:ImagePathConverter x:Key="ImagePathConverter"/>
    <Style x:Key="DarkContextMenuStyle" TargetType="{x:Type ContextMenu}">
      <Setter Property="Control.Background" Value="#2D2D30"/>
      <Setter Property="Control.BorderBrush" Value="#3E3E42"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="Control.Padding" Value="2"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ContextMenu}">
            <Border Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="4"
                    Padding="{TemplateBinding Control.Padding}">
              <StackPanel IsItemsHost="True" Background="Transparent"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="NoIconMenuItemStyle" TargetType="{x:Type MenuItem}">
      <Setter Property="Control.Foreground" Value="#CCCCCC"/>
      <Setter Property="Control.Background" Value="Transparent"/>
      <Setter Property="FrameworkElement.Height" Value="32"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type MenuItem}">
            <Border x:Name="Border" Background="Transparent" BorderThickness="0">
              <TextBlock x:Name="HeaderText" Text="{TemplateBinding HeaderedItemsControl.Header}"
                         Foreground="{TemplateBinding Control.Foreground}" Background="Transparent" Padding="12,6"
                         VerticalAlignment="Center" HorizontalAlignment="Left"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="MenuItem.IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Border.Background" Value="#3E3E42"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="HeaderText" Property="TextBlock.Foreground" Value="#666666"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ToggleSwitchStyle" TargetType="{x:Type CheckBox}">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type CheckBox}">
            <Grid>
              <Border x:Name="SwitchBackground" Width="40" Height="20" CornerRadius="10" Background="#555555">
                <Border x:Name="SwitchThumb" Width="14" Height="14" CornerRadius="7" Background="White"
                        HorizontalAlignment="Left" Margin="3,0,0,0"/>
              </Border>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="SwitchBackground" Property="Border.Background" Value="#0E639C"/>
                <Setter TargetName="SwitchThumb" Property="FrameworkElement.HorizontalAlignment" Value="Right"/>
                <Setter TargetName="SwitchThumb" Property="FrameworkElement.Margin" Value="0,0,3,0"/>
              </Trigger>
              <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="SwitchBackground" Property="UIElement.Opacity" Value="0.9"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ModernButtonStyle" TargetType="{x:Type Button}">
      <Setter Property="Control.Background" Value="#2D2D30"/>
      <Setter Property="Control.Foreground" Value="#CCCCCC"/>
      <Setter Property="Control.BorderThickness" Value="0"/>
      <Setter Property="Control.Padding" Value="15,10"/>
      <Setter Property="Control.FontSize" Value="13"/>
      <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border Background="{TemplateBinding Control.Background}" CornerRadius="4"
                    Padding="{TemplateBinding Control.Padding}">
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="UIElement.IsMouseOver" Value="True">
          <Setter Property="Control.Background" Value="#3E3E42"/>
        </Trigger>
        <Trigger Property="UIElement.IsEnabled" Value="False">
          <Setter Property="UIElement.Opacity" Value="0.5"/>
          <Setter Property="FrameworkElement.Cursor" Value="Arrow"/>
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="PrimaryButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ModernButtonStyle}">
      <Setter Property="Control.Background" Value="#0E639C"/>
      <Setter Property="Control.Foreground" Value="White"/>
      <Setter Property="Control.FontWeight" Value="SemiBold"/>
      <Style.Triggers>
        <Trigger Property="UIElement.IsMouseOver" Value="True">
          <Setter Property="Control.Background" Value="#1177BB"/>
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="ModListItemStyle" TargetType="{x:Type ListBoxItem}">
      <Setter Property="Control.Background" Value="#2D2D30"/>
      <Setter Property="Control.Foreground" Value="#CCCCCC"/>
      <Setter Property="FrameworkElement.Margin" Value="0,0,0,5"/>
      <Setter Property="Control.Padding" Value="0"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="Control.BorderBrush" Value="#3E3E42"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ListBoxItem}">
            <Border Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="4"
                    Padding="{TemplateBinding Control.Padding}">
              <ContentPresenter/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="UIElement.IsMouseOver" Value="True">
          <Setter Property="Control.Background" Value="#3E3E42"/>
        </Trigger>
        <Trigger Property="ListBoxItem.IsSelected" Value="True">
          <Setter Property="Control.Background" Value="#252526"/>
          <Setter Property="Control.BorderBrush" Value="#0E639C"/>
        </Trigger>
      </Style.Triggers>
    </Style>
  </FrameworkElement.Resources>
  <Grid Margin="20">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <Grid Row="0" Margin="0,0,0,15">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <StackPanel Grid.Column="0" Orientation="Horizontal">
        <TextBlock Text="{x:Static properties:Resources.ModsTab_Header}" FontSize="18" FontWeight="SemiBold" Foreground="White"
                   VerticalAlignment="Center"/>
        <TextBlock FontSize="14" Foreground="#999999" VerticalAlignment="Center" Margin="15,0,0,0"
                   Text="{Binding ActivePlaysetMods.Count, StringFormat='{}{0} mods'}"/>
      </StackPanel>
      <StackPanel Grid.Column="1" Orientation="Horizontal">
        <TextBox Width="200" Height="30" Background="#2D2D30" Foreground="#CCCCCC" BorderBrush="#3E3E42"
                 Padding="8,5" FontSize="13" VerticalContentAlignment="Center"
                 Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}">
          <FrameworkElement.Style>
            <Style TargetType="{x:Type TextBox}">
              <Style.Triggers>
                <Trigger Property="TextBox.Text" Value="">
                  <Setter Property="Control.Background" Value="#2D2D30"/>
                </Trigger>
              </Style.Triggers>
            </Style>
          </FrameworkElement.Style>
        </TextBox>
        <TextBlock Text="🔍" FontSize="16" Foreground="#CCCCCC" VerticalAlignment="Center" Margin="10,0,0,0"
                   IsHitTestVisible="False"/>
      </StackPanel>
    </Grid>
    <Border Grid.Row="1" Background="#252526" BorderBrush="#3E3E42" BorderThickness="1" CornerRadius="6">
      <ListBox PreviewMouseLeftButtonDown="ModsListBox_PreviewMouseLeftButtonDown"
               PreviewMouseRightButtonDown="ModsListBox_PreviewMouseRightButtonDown"
               PreviewMouseWheel="ModsListBox_PreviewMouseWheel" MouseMove="ModsListBox_MouseMove"
               DragOver="ModsListBox_DragOver" Drop="ModsListBox_Drop"
               QueryContinueDrag="ModsListBox_QueryContinueDrag" DragLeave="ModsListBox_DragLeave"
               x:Name="ModsListBox" ItemContainerStyle="{StaticResource ModListItemStyle}"
               Background="Transparent" BorderThickness="0" Padding="10"
               ScrollViewer.HorizontalScrollBarVisibility="Disabled" AllowDrop="True"
               VirtualizingStackPanel.IsVirtualizing="True"
               VirtualizingStackPanel.VirtualizationMode="Recycling"
               ItemsSource="{Binding FilteredPlaysetMods}" SelectedItem="{Binding SelectedPlaysetMod}">
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <Grid Height="70" Margin="10,5" Opacity="{Binding IsEnabled, Converter={StaticResource BoolToOpacityConverter}}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <Border Grid.Column="0" Background="#1E1E1E" CornerRadius="4" Width="50" Height="50"
                      VerticalAlignment="Center" Margin="0,0,15,0">
                <TextBox FontSize="20" FontWeight="Bold" Foreground="#4EC9B0" Background="Transparent"
                         BorderThickness="0" CaretBrush="White" SelectionBrush="#4EC9B0"
                         HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center"
                         VerticalContentAlignment="Center" Width="40" MaxLength="4"
                         Text="{Binding LoadOrder, UpdateSourceTrigger=LostFocus}"/>
              </Border>
              <Border Grid.Column="1" Width="64" Height="64" CornerRadius="4" VerticalAlignment="Center"
                      Margin="0,0,15,0" BorderBrush="#3E3E42" BorderThickness="1">
                <Image Stretch="UniformToFill" Source="{Binding ImagePath, Converter={StaticResource ImagePathConverter}}"/>
              </Border>
              <StackPanel Grid.Column="2" VerticalAlignment="Center">
                <TextBlock FontSize="15" FontWeight="SemiBold" Foreground="White" TextTrimming="CharacterEllipsis"
                           Text="{Binding Name}"/>
                <TextBlock FontSize="12" Foreground="#999999" Margin="0,3,0,0">
                  <Run Text="{x:Static properties:Resources.ModsTab_AuthorLabel}"/>
                  <Run Foreground="#CCCCCC" Text="{Binding Author, Mode=OneWay}"/>
                </TextBlock>
              </StackPanel>
              <CheckBox Grid.Column="3" VerticalAlignment="Center" Margin="15,0" Style="{StaticResource ToggleSwitchStyle}"
                        IsChecked="{Binding IsEnabled}"/>
              <Button Grid.Column="4" Content="⋯" FontSize="18" Width="30" Height="30" VerticalAlignment="Center"
                      Margin="5,0" Background="Transparent" Foreground="#CCCCCC" BorderThickness="0" Cursor="Hand"
                      Click="BurgerMenuButton_Click">
                <FrameworkElement.ContextMenu>
                  <ContextMenu Style="{StaticResource DarkContextMenuStyle}">
                    <MenuItem Header="{x:Static properties:Resources.ModsTab_OpenInWorkshop}" Style="{StaticResource NoIconMenuItemStyle}"
                              Command="{Binding PlacementTarget.DataContext.DataContext.OpenInWorkshopCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="{x:Static properties:Resources.ModsTab_ShowInFolder}" Style="{StaticResource NoIconMenuItemStyle}"
                              Command="{Binding PlacementTarget.DataContext.DataContext.ShowInFolderCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                  </ContextMenu>
                </FrameworkElement.ContextMenu>
                <FrameworkElement.Style>
                  <Style TargetType="{x:Type Button}">
                    <Setter Property="Control.Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                          <Border Background="{TemplateBinding Control.Background}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                          </Border>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                      <Trigger Property="UIElement.IsMouseOver" Value="True">
                        <Setter Property="Control.Background" Value="#3E3E42"/>
                      </Trigger>
                    </Style.Triggers>
                  </Style>
                </FrameworkElement.Style>
              </Button>
              <Button Grid.Column="5" Content="✕" FontSize="16" Width="30" Height="30" VerticalAlignment="Center"
                      Margin="5,0,0,0" Background="Transparent" Foreground="#E74856" BorderThickness="0" Cursor="Hand"
                      ToolTip="{x:Static properties:Resources.ModsTab_RemoveTooltip}"
                      Command="{Binding DataContext.RemoveModCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                      CommandParameter="{Binding}">
                <FrameworkElement.Style>
                  <Style TargetType="{x:Type Button}">
                    <Setter Property="Control.Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                          <Border Background="{TemplateBinding Control.Background}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                          </Border>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                      <Trigger Property="UIElement.IsMouseOver" Value="True">
                        <Setter Property="Control.Background" Value="#3E3E42"/>
                        <Setter Property="Control.Foreground" Value="#FF5555"/>
                      </Trigger>
                    </Style.Triggers>
                  </Style>
                </FrameworkElement.Style>
              </Button>
            </Grid>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ListBox>
    </Border>
    <Grid Row="2" Margin="0,15,0,0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <TextBlock Grid.Column="0" VerticalAlignment="Center" Foreground="#999999" FontSize="12">
        <Run Text="{x:Static properties:Resources.ModsTab_DragToReorder}"/>
        <Run Text="  •  "/>
        <Run Text="{x:Static properties:Resources.ModsTab_ClickForOptions}"/>
      </TextBlock>
      <StackPanel Grid.Column="1" Orientation="Horizontal">
        <Button Content="{x:Static properties:Resources.ModsTab_AddModsButton}" Style="{StaticResource PrimaryButtonStyle}" MinWidth="150" Margin="0,0,10,0"
                Command="{Binding OpenAddModsWindowCommand}"/>
        <Button Content="{x:Static properties:Resources.ModsTab_RefreshButton}" Style="{StaticResource ModernButtonStyle}" MinWidth="100"
                Command="{Binding RefreshCommand}"/>
      </StackPanel>
    </Grid>
    <Border Grid.RowSpan="3" Background="#DD000000" CornerRadius="6"
            Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
      <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
        <ProgressBar IsIndeterminate="True" Width="200" Height="4" Background="#2D2D30" Foreground="#0E639C"
                     BorderThickness="0"/>
        <TextBlock Text="{x:Static properties:Resources.ModsTab_LoadingMods}" Foreground="White" Margin="0,15,0,0" HorizontalAlignment="Center"
                   FontSize="14"/>
      </StackPanel>
    </Border>
  </Grid>
</UserControl>